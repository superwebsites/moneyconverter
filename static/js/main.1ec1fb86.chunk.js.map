{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstcurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEe,SAASA,EAAYC,GAAQ,IAEpCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAEJ,OACI,6BACI,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,4BAAQI,MAAON,EAAkBO,SAAUN,GACtCF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,QCVzD,IAAME,EAAW,yCAmEFC,MAlEf,WAAgB,IAQVC,EAAUC,EARD,EACiCC,mBAAS,IAD1C,mBACNhB,EADM,KACWiB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNZ,EALM,KAKEoB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KA4Cb,OAnCID,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAExBK,qBAAU,WACRC,MAAMhB,GACLiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,IAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE5B,IAEHN,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GACzBQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAG1C,CAACF,EAAcE,IAUlB,oCACC,uCACA,kBAACtB,EAAD,CACCE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAoC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAOhC,QAChDJ,eAfF,SAAgCmC,GAC9Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,IAcxBtB,OAAQW,IAET,yBAAKT,UAAU,UAAf,KACA,kBAACR,EAAD,CACCE,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAoC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOhC,QAC9CJ,eAnBF,SAA8BmC,GAC5Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,IAkBxBtB,OAAQU,MC7DZ0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1ec1fb86.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n    const {\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        onChangeAmount,\r\n        amount\r\n    } = props \r\n    return (\r\n        <div>\r\n            <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\r\n            <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n                {currencyOptions.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n               \r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n  useEffect(() => {\n    fetch(BASE_URL)\n    .then(res => res.json())\n    .then(data => {\n      const firstcurrency = Object.keys(data.rates)[26]\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstcurrency)\n      setExchangeRate(data.rates[firstcurrency])\n    })\n  }, [])\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null){\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n    \n  }, [fromCurrency, toCurrency])\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n  return (\n  <>\n   <h1>Convert</h1>\n   <CurrencyRow \n    currencyOptions={currencyOptions}\n    selectedCurrency={fromCurrency}\n    onChangeCurrency={e => setFromCurrency(e.target.value)}\n    onChangeAmount={handleFromAmountChange}\n    amount={fromAmount}\n   />\n   <div className=\"equals\">=</div>\n   <CurrencyRow \n    currencyOptions={currencyOptions}\n    selectedCurrency={toCurrency}\n    onChangeCurrency={e => setToCurrency(e.target.value)}\n    onChangeAmount={handleToAmountChange}\n    amount={toAmount}\n   />\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}